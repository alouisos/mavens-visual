<div class="row">

                  <div class="col-lg-12 col-xs-12">
                    <div class="bubble-graph">
<p class="app-name"> Cambridge Clinical Trials Unit</p>


<script src="http://d3js.org/d3.v3.min.js"></script>
<style>

.bubble { 
display: block;
    margin-left: auto;
    margin-right: auto; 
}


text {
  font: 12px Montserrat;
  fill: #ffffff;
}

</style>
<script>

var diameter = 660,
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);




var svg = d3.select(".bubble-graph").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");
   

 


data = d3.json("/js/flare.json", function(error, root) {
  var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(root))
      .filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.className + " " + "Trial"; });
 


  node.append("svg:a")
        .attr("xlink:href", function(d) { return d.url;})
      .append("svg:circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return d.color; });

 
  node.append("svg:a")
        .attr("xlink:href", function(d) { return d.url;})
        .append("svg:text")
      .attr("dy", ".3em") 
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });


   

});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
   if (node.children) node.children.forEach(function (child) { recurse(node.name, child); });
else classes.push({ packageName: name, 
                    className: node.name, 
                    url: node.url,
                    value: node.size, 
                    color: node.color, 
                    id: node.id});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

</script>




</div> </div> 

</div> 